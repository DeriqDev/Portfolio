/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: pamoan10 (https://sketchfab.com/pamoan10)
License: CC-BY-NC-4.0 (http://creativecommons.org/licenses/by-nc/4.0/)
Source: https://sketchfab.com/3d-models/cat-walking-827aa2c7951747599629700703050673
Title: Cat - Walking
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import * as THREE from 'three'

export function Cat(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/model/cat.glb");
  const { actions } = useAnimations(animations, group);
  console.log(actions);
  const [animation, setAnimation] = useState("Take 001")
  const [animationsPaused, setAnimationPaused] = useState("Take 001")

  useEffect(() => {
    actions[animation].reset().fadeIn(0.5).play()
    return () => actions[animation].fadeOut(0.5).play()
  }, [animation])

  // useEffect(() => {
  //   actions[animationsPaused].reset().paused
  //   return () => actions[animationsPaused].paused
  // }, animationsPaused)

  const scrollData = useScroll()
  const lastScroll = useRef(0)

  useFrame(() => {
    const scrollDelta = scrollData.offset - lastScroll.current
    let rotationTarget = 0
    if(Math.abs(scrollDelta) > 0.00001){
        setAnimation("Take 001")
        if (scrollDelta > 0){
            rotationTarget = Math.PI/4
        } else {
            rotationTarget = -Math.PI/2
        }
    } else {
        setAnimation("Take 001")
        //setAnimationPaused("Take 001")
    }
    group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, rotationTarget, 0.1)
    lastScroll.current = scrollData.offset
  })

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          position={[-0.625, 0, -0.116]}
          rotation={[-Math.PI / 2, 0, -0.757]}
        >
          <group
            name="496e25a8020d4d6cb3c8412ad32426d4fbx"
            rotation={[Math.PI / 2, 0, 0]}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group name="default" rotation={[-Math.PI / 2, 0, 0]} />
                <group name="Dummy001" rotation={[-Math.PI / 2, 0, 0]}>
                  <group
                    name="Character001"
                    position={[-0.295, -0.262, 0]}
                    rotation={[Math.PI, 1.571, 0]}
                  >
                    <group name="Object_7">
                      <primitive object={nodes._rootJoint} />
                      <skinnedMesh
                        name="Object_10"
                        geometry={nodes.Object_10.geometry}
                        material={materials.Material_2}
                        skeleton={nodes.Object_10.skeleton}
                      />
                      <group
                        name="Object_9"
                        position={[0, 0, -7.913]}
                        rotation={[-Math.PI / 2, 0, 0]}
                      />
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/model/cat.glb");
